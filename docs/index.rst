Flask-AutoIndex
~~~~~~~~~~~~~~~

.. module:: flaskext.autoindex

Flask-AutoIndex generates an index page to your `Flask`_ application
automacally. The generation is just like `mod_autoindex`_, but the look is
very awesome! Look at this:

.. figure:: _static/example.png
   :alt: The screenshot of index page generated by Flask-AutoIndex

This module contains `silk icons`_ set and pre designed css file. You can use
this default style or make your own style.

.. _Flask: http://flask.pocoo.org/
.. _mod_autoindex: http://httpd.apache.org/docs/current/mod/mod_autoindex.html
.. _silk icons: http://www.famfamfam.com/lab/icons/silk

Installation
============

Now Flask-AutoIndex is on only GitHub repository. Check out right now::

    $ git clone git://github.com/sublee/flask-autoindex.git

How to Use
==========

Flask-AutoIndex is incredibly easy to use and extensible enough.

First, make a autoindex module(``yourapp/module/__init__.py``)::

    import os.path
    import flask
    from flaskext.autoindex import AutoIndex
    mod = AutoIndex(__name__, browse_root=os.path.curdir)

Second, make a flask application and register the
module(``yourapp/__init__.py``)::

    from flask import Flask
    from module import mod
    app = Flask(__name__)
    app.register_module(mod)

Customizing
===========

Adding an icon rule
```````````````````

Follow these example::

    from module import mod
    mod.add_icon_rule("python.png", ext="pyo")

Routing a specified path
````````````````````````

Follow these example::

    from module import mod
    @mod.route("/helloworld")
    def helloworld():
        return "Hello, world!", 200

Changing a template
```````````````````

Follow these example(``yourapp/module/template/browse.html``):

.. sourcecode:: jinja

    {% extend "__autoindex__/browse.html" %}
    {% block header %}
        Hello, world!
    {% endblock %}

API
===

Configuration
`````````````

.. autoclass:: AutoIndex
   :members:

.. autoclass:: AutoIndexApplication
   :members:

.. autoclass:: AutoIndexModule
   :members:

Models
``````

.. autoclass:: Entry
   :members:

.. autoclass:: File
   :members:

.. autoclass:: Forder
   :members:

.. autoclass:: ParentFolder
   :members:

